// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  password  String
  role      UserRole @default(SEEKER)
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  properties Property[]
  messages   Message[]

  @@map("users")
}

model Property {
  id          String      @id @default(cuid())
  title       String
  description String      @db.Text
  price       Decimal     @db.Decimal(10, 2)
  type        PropertyType
  status      PropertyStatus @default(AVAILABLE)
  bedrooms    Int
  bathrooms   Int
  area        Int         // in square feet
  address     String
  city        String
  state       String
  zipCode     String
  latitude    Float?
  longitude   Float?
  images      String      @db.Text // JSON array of image URLs
  amenities   String?     @db.Text // JSON array of amenities
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  // Relations
  owner       User        @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId     String
  messages    Message[]

  @@map("properties")
}

model Message {
  id         String   @id @default(cuid())
  content    String   @db.Text
  createdAt  DateTime @default(now())

  // Relations
  sender     User     @relation(fields: [senderId], references: [id], onDelete: Cascade)
  senderId   String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
  propertyId String

  @@map("messages")
}

enum UserRole {
  OWNER
  SEEKER
}

enum PropertyType {
  APARTMENT
  HOUSE
  CONDO
  TOWNHOUSE
  STUDIO
}

enum PropertyStatus {
  AVAILABLE
  RENTED
  SOLD
}